// Autogenerated. Will be overwritten on build. Remove this comment to cancel overwriting.

using System;
using System.Linq;
using Common.Extensions.Object;
namespace Communication.Models.Entities.ReferrableEntities.Documents.OutcomingOrder
{
    public interface IOutcomingOrderModel : Communication.Models.IModelBase, IEquatable<IOutcomingOrderModel>
    {
        public System.String Number { get; set; }
        public Communication.Models.Entities.ReferrableEntities.Documents.OutcomingOrder.IOutcomingOrderReference Reference { get; }
        public System.Collections.Generic.IList<Communication.Models.Entities.ReferrableEntities.Documents.IncomingOrder.IIncomingOrderReference> OrdersIncoming { get; }
        bool IEquatable<IOutcomingOrderModel>.Equals(IOutcomingOrderModel other)
        {
            var result = Number.CompareConsideringNulls(other.Number) && Reference.CompareConsideringNulls(other.Reference) && OrdersIncoming.Count == other.OrdersIncoming.Count && OrdersIncoming.All(p1 => other.OrdersIncoming.Any(p2 => p1.CompareConsideringNulls(p2)));
            return result;
        }
    }
}