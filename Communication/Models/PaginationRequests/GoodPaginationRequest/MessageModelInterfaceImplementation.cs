// Autogenerated. Will be overwritten on build. Remove this comment to cancel overwriting.

using Communication.Models.PaginationRequests.GoodPaginationRequest;
using System.Linq;
using Communication.Common;
using Google.Protobuf.Collections;
using System.Collections.Generic;
using System.Collections;
using Communication.ProtoModels.Conversion;
namespace Communication.ProtoModels
{
    public sealed partial class GoodPaginationRequestModelList : IList<Communication.Models.PaginationRequests.GoodPaginationRequest.IGoodPaginationRequestModel>
    {
        internal ListWrapper<GoodPaginationRequestModel, RepeatedField<GoodPaginationRequestModel>, IGoodPaginationRequestModel> Wrapper { get; private set; }
        public GoodPaginationRequestModelList(RepeatedField<GoodPaginationRequestModel> itemsParameter)
        {
            this.message_ = itemsParameter;
            OnConstruction();
        }
        partial void OnConstruction()
        {
            Wrapper = new ListWrapper<GoodPaginationRequestModel, RepeatedField<GoodPaginationRequestModel>, IGoodPaginationRequestModel>(Message, i => i.ToProto());
        }
        IGoodPaginationRequestModel IList<IGoodPaginationRequestModel>.this[int index] { get => Wrapper[index]; set => Wrapper[index] = value; }
        int IList<IGoodPaginationRequestModel>.IndexOf(IGoodPaginationRequestModel item) => Wrapper.IndexOf(item);
        void IList<IGoodPaginationRequestModel>.Insert(int index, IGoodPaginationRequestModel item) => Wrapper.Insert(index, item);
        void IList<IGoodPaginationRequestModel>.RemoveAt(int index) => Wrapper.RemoveAt(index);
        int ICollection<IGoodPaginationRequestModel>.Count => Wrapper.Count;
        bool ICollection<IGoodPaginationRequestModel>.IsReadOnly => Wrapper.IsReadOnly;
        void ICollection<IGoodPaginationRequestModel>.Add(IGoodPaginationRequestModel item) => Wrapper.Add(item);
        void ICollection<IGoodPaginationRequestModel>.Clear() => Wrapper.Clear();
        bool ICollection<IGoodPaginationRequestModel>.Contains(IGoodPaginationRequestModel item) => Wrapper.Contains(item);
        void ICollection<IGoodPaginationRequestModel>.CopyTo(IGoodPaginationRequestModel[] array, int arrayIndex) => Wrapper.CopyTo(array, arrayIndex);
        IEnumerator<IGoodPaginationRequestModel> IEnumerable<IGoodPaginationRequestModel>.GetEnumerator() => Wrapper.GetEnumerator();
        IEnumerator IEnumerable.GetEnumerator() => Wrapper.GetEnumerator();
        bool ICollection<IGoodPaginationRequestModel>.Remove(IGoodPaginationRequestModel item) => Wrapper.Remove(item);
        public static implicit operator GoodPaginationRequestModelList(RepeatedField<GoodPaginationRequestModel> from)
        {
            var result = new GoodPaginationRequestModelList(from);
            return result;
        }
        public static implicit operator RepeatedField<GoodPaginationRequestModel>(GoodPaginationRequestModelList from)
        {
            return from.Message;
        }
    }
    public sealed partial class GoodPaginationRequestModel : IGoodPaginationRequestModel
    {
        Communication.Models.Filters.GoodModelFilter.IGoodModelFilterModel IGoodPaginationRequestModel.Filter
        {
            set
            {
                Filter = value.ToProto();
            }
            get
            {
                return Filter;
            }
        }
    }
}