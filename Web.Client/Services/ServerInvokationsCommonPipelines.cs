// Autogenerated. Will be overwritten on build. Remove this comment to cancel overwriting_.

using System;
using Communication;
using System.Linq;
using System.Collections.Generic;
using Communication.Exceptions;
using System.Threading.Tasks;
namespace Web.Client.Services
{
    public static class ClientCommonPipelines
    {
        public static async Task<TMessage> InvokeServerAction<TParameter, TMessage>(Func<Task<IServerResponse<TMessage>>> action)
        {
            var task = action();
            var result = await task;
            if (result.Status?.Error != null)
            {
                var exception = result.Status.Error.ToException();
                if (exception is UnauthorisedHandledException)
                {
                    Account.RedirectToLogin();
                    return default(TMessage);
                }
                throw new ServerSideException($"Server side exception: {exception.Message}.", exception);
            }
            return result.Message;
        }
    }
}