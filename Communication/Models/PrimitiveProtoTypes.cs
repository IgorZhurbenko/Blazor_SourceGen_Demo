// Autogenerated. Will be overwritten on build. Remove this comment to cancel overwriting.

using System.Collections.Generic;
using System.Collections;
using Communication.ProtoModels;
using Communication.ProtoModels.Conversion;
using Google.Protobuf.Collections;
using Communication.Common;
using System.Linq;
using Communication;
namespace Communication.ProtoModels
{
    public sealed partial class DateTimeMessage : IServerResponse<System.DateTime>
    {
        System.DateTime IServerResponse<System.DateTime>.Message => Message.ToDateTime().ToLocalTime();
        public DateTimeMessage(System.DateTime from)
        {
            this.Message = from.ToProto();
        }
    }
    public sealed partial class DateTimeList : IList<System.DateTime>
    {
        System.DateTime IList<System.DateTime>.this[int index] { get => Message[index].ToDateTime().ToLocalTime(); set => Message[index] = Google.Protobuf.WellKnownTypes.Timestamp.FromDateTime(value.ToUniversalTime()); }
        int IList<System.DateTime>.IndexOf(System.DateTime item) => Message.IndexOf(Google.Protobuf.WellKnownTypes.Timestamp.FromDateTime(item.ToUniversalTime()));
        void IList<System.DateTime>.Insert(int index, System.DateTime item) => Message.Insert(index, item.ToProto());
        void IList<System.DateTime>.RemoveAt(int index) => Message.RemoveAt(index);
        int ICollection<System.DateTime>.Count => Message.Count;
        bool ICollection<System.DateTime>.IsReadOnly => Message.IsReadOnly;
        void ICollection<System.DateTime>.Add(System.DateTime item) => Message.Add(item.ToProto());
        void ICollection<System.DateTime>.Clear() => Message.Clear();
        bool ICollection<System.DateTime>.Contains(System.DateTime item) => Message.Contains(item.ToProto());
        void ICollection<System.DateTime>.CopyTo(System.DateTime[] array, int arrayIndex) => Message.Select(i => i.ToDateTime().ToLocalTime()).ToList().CopyTo(array, arrayIndex);
        IEnumerator<System.DateTime> IEnumerable<System.DateTime>.GetEnumerator() => Message.Select(i => i.ToDateTime().ToLocalTime()).GetEnumerator();
        IEnumerator IEnumerable.GetEnumerator() => Message.GetEnumerator();
        bool ICollection<System.DateTime>.Remove(System.DateTime item) => Message.Remove(item.ToProto());
        public DateTimeList(RepeatedField<Google.Protobuf.WellKnownTypes.Timestamp> items)
        {
            message_ = items;
        }
    }
    public sealed partial class DateTimeListMessage : IServerResponse<IList<System.DateTime>>
    {
        IList<System.DateTime> IServerResponse<IList<System.DateTime>>.Message => Message;
        public DateTimeListMessage(DateTimeList innerMessage)
        {
            message_ = innerMessage;
        }
    }
    public sealed partial class StringMessage : IServerResponse<System.String>
    {
        public StringMessage(System.String from)
        {
            this.Message = from;
        }
    }
    public sealed partial class StringListMessage : IServerResponse<IList<System.String>>
    {
        IList<System.String> IServerResponse<IList<System.String>>.Message => Message;
        public StringListMessage(RepeatedField<System.String> innerMessage)
        {
            message_ = innerMessage;
        }
    }
    public sealed partial class Int32Message : IServerResponse<System.Int32>
    {
        public Int32Message(System.Int32 from)
        {
            this.Message = from;
        }
    }
    public sealed partial class Int32ListMessage : IServerResponse<IList<System.Int32>>
    {
        IList<System.Int32> IServerResponse<IList<System.Int32>>.Message => Message;
        public Int32ListMessage(RepeatedField<System.Int32> innerMessage)
        {
            message_ = innerMessage;
        }
    }
    public sealed partial class Int64Message : IServerResponse<System.Int64>
    {
        public Int64Message(System.Int64 from)
        {
            this.Message = from;
        }
    }
    public sealed partial class Int64ListMessage : IServerResponse<IList<System.Int64>>
    {
        IList<System.Int64> IServerResponse<IList<System.Int64>>.Message => Message;
        public Int64ListMessage(RepeatedField<System.Int64> innerMessage)
        {
            message_ = innerMessage;
        }
    }
    public sealed partial class UInt32Message : IServerResponse<System.UInt32>
    {
        public UInt32Message(System.UInt32 from)
        {
            this.Message = from;
        }
    }
    public sealed partial class UInt32ListMessage : IServerResponse<IList<System.UInt32>>
    {
        IList<System.UInt32> IServerResponse<IList<System.UInt32>>.Message => Message;
        public UInt32ListMessage(RepeatedField<System.UInt32> innerMessage)
        {
            message_ = innerMessage;
        }
    }
    public sealed partial class UInt64Message : IServerResponse<System.UInt64>
    {
        public UInt64Message(System.UInt64 from)
        {
            this.Message = from;
        }
    }
    public sealed partial class UInt64ListMessage : IServerResponse<IList<System.UInt64>>
    {
        IList<System.UInt64> IServerResponse<IList<System.UInt64>>.Message => Message;
        public UInt64ListMessage(RepeatedField<System.UInt64> innerMessage)
        {
            message_ = innerMessage;
        }
    }
    public sealed partial class BooleanMessage : IServerResponse<System.Boolean>
    {
        public BooleanMessage(System.Boolean from)
        {
            this.Message = from;
        }
    }
    public sealed partial class BooleanListMessage : IServerResponse<IList<System.Boolean>>
    {
        IList<System.Boolean> IServerResponse<IList<System.Boolean>>.Message => Message;
        public BooleanListMessage(RepeatedField<System.Boolean> innerMessage)
        {
            message_ = innerMessage;
        }
    }
    public sealed partial class SingleMessage : IServerResponse<System.Single>
    {
        public SingleMessage(System.Single from)
        {
            this.Message = from;
        }
    }
    public sealed partial class SingleListMessage : IServerResponse<IList<System.Single>>
    {
        IList<System.Single> IServerResponse<IList<System.Single>>.Message => Message;
        public SingleListMessage(RepeatedField<System.Single> innerMessage)
        {
            message_ = innerMessage;
        }
    }
    public sealed partial class DoubleMessage : IServerResponse<System.Double>
    {
        public DoubleMessage(System.Double from)
        {
            this.Message = from;
        }
    }
    public sealed partial class DoubleListMessage : IServerResponse<IList<System.Double>>
    {
        IList<System.Double> IServerResponse<IList<System.Double>>.Message => Message;
        public DoubleListMessage(RepeatedField<System.Double> innerMessage)
        {
            message_ = innerMessage;
        }
    }
}