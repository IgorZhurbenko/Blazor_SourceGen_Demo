// Autogenerated. Will be overwritten on build. Remove this comment to cancel overwriting.

using System;
using System.Linq;
using Common.Extensions.Object;
namespace Communication.Models.Entities.ReferrableEntities.DataHolders.Persons.Employee
{
    public interface IEmployeeModel : Communication.Models.IModelBase, IEquatable<IEmployeeModel>
    {
        public System.String FirstName { get; set; }
        public System.String LastName { get; set; }
        public Communication.Models.Entities.ReferrableEntities.DataHolders.Persons.Employee.IEmployeeReference Reference { get; }
        public Communication.Models.Entities.ReferrableEntities.DataHolders.Persons.Employee.IEmployeeReference Mentor { get; set; }
        public System.Collections.Generic.IList<Communication.Models.Entities.ReferrableEntities.DataHolders.Good.IGoodReference> ResponsibleForGoods { get; }
        bool IEquatable<IEmployeeModel>.Equals(IEmployeeModel other)
        {
            var result = FirstName.CompareConsideringNulls(other.FirstName) && LastName.CompareConsideringNulls(other.LastName) && Reference.CompareConsideringNulls(other.Reference) && Mentor.CompareConsideringNulls(other.Mentor) && ResponsibleForGoods.Count == other.ResponsibleForGoods.Count && ResponsibleForGoods.All(p1 => other.ResponsibleForGoods.Any(p2 => p1.CompareConsideringNulls(p2)));
            return result;
        }
    }
}