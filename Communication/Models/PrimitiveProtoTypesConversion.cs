// Autogenerated. Will be overwritten on build. Remove this comment to cancel overwriting.

using System.Collections.Generic;
using System.Collections;
using Communication.ProtoModels;
using Google.Protobuf.Collections;
using System.Linq;
namespace Communication.ProtoModels.Conversion
{
    public static class PrimitivesConverter
    {
        public static RepeatedField<Google.Protobuf.WellKnownTypes.Timestamp> ToProto(this IEnumerable<System.DateTime> items)
        {
            var result = new RepeatedField<Google.Protobuf.WellKnownTypes.Timestamp>();
            if (items != null && items.Any())
            {
                result.Add(items.Select(i => i.ToProto()));
            }
            return result;
        }
        public static RepeatedField<System.String> ToProto(this IEnumerable<System.String> items)
        {
            if (items is RepeatedField<System.String> readyResult)
            {
                return readyResult;
            }
            var result = new RepeatedField<System.String>();
            if (items != null && items.Any())
            {
                result.Add(items);
            }
            return result;
        }
        public static StringMessage ToProto(this System.String value)
        {
            // Counts on having constructor with parameter of inner message.
            return new(value);
        }
        public static RepeatedField<System.Int32> ToProto(this IEnumerable<System.Int32> items)
        {
            if (items is RepeatedField<System.Int32> readyResult)
            {
                return readyResult;
            }
            var result = new RepeatedField<System.Int32>();
            if (items != null && items.Any())
            {
                result.Add(items);
            }
            return result;
        }
        public static Int32Message ToProto(this System.Int32 value)
        {
            // Counts on having constructor with parameter of inner message.
            return new(value);
        }
        public static RepeatedField<System.Int64> ToProto(this IEnumerable<System.Int64> items)
        {
            if (items is RepeatedField<System.Int64> readyResult)
            {
                return readyResult;
            }
            var result = new RepeatedField<System.Int64>();
            if (items != null && items.Any())
            {
                result.Add(items);
            }
            return result;
        }
        public static Int64Message ToProto(this System.Int64 value)
        {
            // Counts on having constructor with parameter of inner message.
            return new(value);
        }
        public static RepeatedField<System.UInt32> ToProto(this IEnumerable<System.UInt32> items)
        {
            if (items is RepeatedField<System.UInt32> readyResult)
            {
                return readyResult;
            }
            var result = new RepeatedField<System.UInt32>();
            if (items != null && items.Any())
            {
                result.Add(items);
            }
            return result;
        }
        public static UInt32Message ToProto(this System.UInt32 value)
        {
            // Counts on having constructor with parameter of inner message.
            return new(value);
        }
        public static RepeatedField<System.UInt64> ToProto(this IEnumerable<System.UInt64> items)
        {
            if (items is RepeatedField<System.UInt64> readyResult)
            {
                return readyResult;
            }
            var result = new RepeatedField<System.UInt64>();
            if (items != null && items.Any())
            {
                result.Add(items);
            }
            return result;
        }
        public static UInt64Message ToProto(this System.UInt64 value)
        {
            // Counts on having constructor with parameter of inner message.
            return new(value);
        }
        public static RepeatedField<System.Boolean> ToProto(this IEnumerable<System.Boolean> items)
        {
            if (items is RepeatedField<System.Boolean> readyResult)
            {
                return readyResult;
            }
            var result = new RepeatedField<System.Boolean>();
            if (items != null && items.Any())
            {
                result.Add(items);
            }
            return result;
        }
        public static BooleanMessage ToProto(this System.Boolean value)
        {
            // Counts on having constructor with parameter of inner message.
            return new(value);
        }
        public static RepeatedField<System.Single> ToProto(this IEnumerable<System.Single> items)
        {
            if (items is RepeatedField<System.Single> readyResult)
            {
                return readyResult;
            }
            var result = new RepeatedField<System.Single>();
            if (items != null && items.Any())
            {
                result.Add(items);
            }
            return result;
        }
        public static SingleMessage ToProto(this System.Single value)
        {
            // Counts on having constructor with parameter of inner message.
            return new(value);
        }
        public static RepeatedField<System.Double> ToProto(this IEnumerable<System.Double> items)
        {
            if (items is RepeatedField<System.Double> readyResult)
            {
                return readyResult;
            }
            var result = new RepeatedField<System.Double>();
            if (items != null && items.Any())
            {
                result.Add(items);
            }
            return result;
        }
        public static DoubleMessage ToProto(this System.Double value)
        {
            // Counts on having constructor with parameter of inner message.
            return new(value);
        }
    }
}