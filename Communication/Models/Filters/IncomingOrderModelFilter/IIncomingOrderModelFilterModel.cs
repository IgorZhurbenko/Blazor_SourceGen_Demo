// Autogenerated. Will be overwritten on build. Remove this comment to cancel overwriting.

using System;
using System.Linq;
using Common.Extensions.Object;
namespace Communication.Models.Filters.IncomingOrderModelFilter
{
    public interface IIncomingOrderModelFilterModel : Communication.Models.IModelBase, IEquatable<IIncomingOrderModelFilterModel>
    {
        public System.Boolean Exclusive { get; }
        public System.UInt32 Limit { get; }
        public Communication.Models.Filters.StringFilter.IStringFilterModel Number { get; set; }
        public Communication.Models.Filters.ReferenceFilter.IReferenceFilterModel Reference { get; set; }
        public Communication.Models.Filters.CollectionFilter.ICollectionFilterModel RequestedGoods { get; set; }
        bool IEquatable<IIncomingOrderModelFilterModel>.Equals(IIncomingOrderModelFilterModel other)
        {
            var result = Exclusive.CompareConsideringNulls(other.Exclusive) && Limit.CompareConsideringNulls(other.Limit) && Number.CompareConsideringNulls(other.Number) && Reference.CompareConsideringNulls(other.Reference) && RequestedGoods.CompareConsideringNulls(other.RequestedGoods);
            return result;
        }
    }
}