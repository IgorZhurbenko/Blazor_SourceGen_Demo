// Autogenerated. Will be overwritten on build. Remove this comment to cancel overwriting.

using System;
using System.Linq;
using Common.Extensions.Object;
namespace Communication.Models.Entities.TableLines.GoodTransactionLines.IncomingOrderLine
{
    public interface IIncomingOrderLineModel : Communication.Models.IModelBase, IEquatable<IIncomingOrderLineModel>
    {
        public System.UInt32 Quantity { get; set; }
        public System.Single Price { get; set; }
        public Communication.Models.Entities.ReferrableEntities.Documents.IncomingOrder.IIncomingOrderReference IncomingOrder { get; set; }
        public Communication.Models.Entities.ReferrableEntities.DataHolders.Good.IGoodReference Good { get; set; }
        bool IEquatable<IIncomingOrderLineModel>.Equals(IIncomingOrderLineModel other)
        {
            var result = Quantity.CompareConsideringNulls(other.Quantity) && Price.CompareConsideringNulls(other.Price) && IncomingOrder.CompareConsideringNulls(other.IncomingOrder) && Good.CompareConsideringNulls(other.Good);
            return result;
        }
    }
}