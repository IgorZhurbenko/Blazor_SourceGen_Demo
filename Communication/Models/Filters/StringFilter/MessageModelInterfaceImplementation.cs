// Autogenerated. Will be overwritten on build. Remove this comment to cancel overwriting.

using Communication.Models.Filters.StringFilter;
using System.Linq;
using Communication.Common;
using Google.Protobuf.Collections;
using System.Collections.Generic;
using System.Collections;
using Communication.ProtoModels.Conversion;
namespace Communication.ProtoModels
{
    public sealed partial class StringFilterModelList : IList<Communication.Models.Filters.StringFilter.IStringFilterModel>
    {
        internal ListWrapper<StringFilterModel, RepeatedField<StringFilterModel>, IStringFilterModel> Wrapper { get; private set; }
        public StringFilterModelList(RepeatedField<StringFilterModel> itemsParameter)
        {
            this.message_ = itemsParameter;
            OnConstruction();
        }
        partial void OnConstruction()
        {
            Wrapper = new ListWrapper<StringFilterModel, RepeatedField<StringFilterModel>, IStringFilterModel>(Message, i => i.ToProto());
        }
        IStringFilterModel IList<IStringFilterModel>.this[int index] { get => Wrapper[index]; set => Wrapper[index] = value; }
        int IList<IStringFilterModel>.IndexOf(IStringFilterModel item) => Wrapper.IndexOf(item);
        void IList<IStringFilterModel>.Insert(int index, IStringFilterModel item) => Wrapper.Insert(index, item);
        void IList<IStringFilterModel>.RemoveAt(int index) => Wrapper.RemoveAt(index);
        int ICollection<IStringFilterModel>.Count => Wrapper.Count;
        bool ICollection<IStringFilterModel>.IsReadOnly => Wrapper.IsReadOnly;
        void ICollection<IStringFilterModel>.Add(IStringFilterModel item) => Wrapper.Add(item);
        void ICollection<IStringFilterModel>.Clear() => Wrapper.Clear();
        bool ICollection<IStringFilterModel>.Contains(IStringFilterModel item) => Wrapper.Contains(item);
        void ICollection<IStringFilterModel>.CopyTo(IStringFilterModel[] array, int arrayIndex) => Wrapper.CopyTo(array, arrayIndex);
        IEnumerator<IStringFilterModel> IEnumerable<IStringFilterModel>.GetEnumerator() => Wrapper.GetEnumerator();
        IEnumerator IEnumerable.GetEnumerator() => Wrapper.GetEnumerator();
        bool ICollection<IStringFilterModel>.Remove(IStringFilterModel item) => Wrapper.Remove(item);
        public static implicit operator StringFilterModelList(RepeatedField<StringFilterModel> from)
        {
            var result = new StringFilterModelList(from);
            return result;
        }
        public static implicit operator RepeatedField<StringFilterModel>(StringFilterModelList from)
        {
            return from.Message;
        }
    }
    public sealed partial class StringFilterModel : IStringFilterModel
    {
    }
}